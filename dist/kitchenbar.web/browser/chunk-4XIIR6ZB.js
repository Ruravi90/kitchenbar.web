import{a as _,b as B,c as L,e as p,f as H,ib as v,k as _e,q as y,t as I}from"./chunk-EN5K7PU7.js";var S={production:!0,apiBase:"https://kitchenbarapi-production.up.railway.app/api/",hubBase:"https://kitchenbarapi-production.up.railway.app/hubs/base"};var Le=(()=>{let e=class e{constructor(t){this.http=t,this.apiUrl=S.apiBase+"Auth"}login(t){return this.http.post(this.apiUrl+"/Login",t).pipe(_e(o=>(localStorage.setItem("user",JSON.stringify(o.resp)),o.resp)))}getToken(){return localStorage.getItem("user")?JSON.parse(localStorage.getItem("user")).token:""}getCurrentUser(){return localStorage.getItem("user")?JSON.parse(localStorage.getItem("user")):""}checkLogin(){return!!localStorage.getItem("user")}};e.\u0275fac=function(o){return new(o||e)(I(v))},e.\u0275prov=y({token:e,factory:e.\u0275fac,providedIn:"root"});let r=e;return r})();var Fe=(()=>{let e=class e{constructor(t){this.http=t,this.apiUrl=S.apiBase+"categories"}getItems(){return this.http.get(this.apiUrl)}getItemsByInstance(){return this.http.get(this.apiUrl+"/ByInstance")}getItem(t){return this.http.get(`${this.apiUrl}/${t}`)}createItem(t){return this.http.post(this.apiUrl,t)}updateItem(t,o){return this.http.put(`${this.apiUrl}/${t}`,o)}deleteItem(t){return this.http.delete(`${this.apiUrl}/${t}`)}};e.\u0275fac=function(o){return new(o||e)(I(v))},e.\u0275prov=y({token:e,factory:e.\u0275fac,providedIn:"root"});let r=e;return r})();var Je=(()=>{let e=class e{constructor(t){this.http=t,this.apiUrl=S.apiBase+"meals"}getItems(){return this.http.get(this.apiUrl)}getItemsByInstance(){return this.http.get(this.apiUrl+"/byInstance")}getByInstanceIdentity(t){return this.http.get(`${this.apiUrl}/byInstance/${t}`)}getItem(t){return this.http.get(`${this.apiUrl}/${t}`)}createItem(t){return this.http.post(this.apiUrl,t)}updateItem(t,o){return this.http.put(`${this.apiUrl}/${t}`,o)}deleteItem(t){return this.http.delete(`${this.apiUrl}/${t}`)}};e.\u0275fac=function(o){return new(o||e)(I(v))},e.\u0275prov=y({token:e,factory:e.\u0275fac,providedIn:"root"});let r=e;return r})();var Xe=(()=>{let e=class e{constructor(t){this.http=t,this.apiUrl=S.apiBase+"orders"}getItems(){return this.http.get(this.apiUrl)}getItemsByInstance(){return this.http.get(this.apiUrl+"/byInstance")}getItemsByTable(t){return this.http.get(this.apiUrl+"/byTable/"+t)}getItemWithIncludes(t){return this.http.get(`${this.apiUrl}/${t}/WithIncludes`)}getItem(t){return this.http.get(`${this.apiUrl}/${t}`)}createItem(t){return this.http.post(this.apiUrl,t)}updateItem(t,o){return this.http.put(`${this.apiUrl}/${t}`,o)}deleteItem(t){return this.http.delete(`${this.apiUrl}/${t}`)}};e.\u0275fac=function(o){return new(o||e)(I(v))},e.\u0275prov=y({token:e,factory:e.\u0275fac,providedIn:"root"});let r=e;return r})();var Qe=(()=>{let e=class e{constructor(t){this.http=t,this.apiUrl=S.apiBase+"tables"}getItems(){return this.http.get(this.apiUrl)}getItemsByInstance(){return this.http.get(this.apiUrl+"/byInstance")}request(t){return this.http.post(this.apiUrl+"/request",t)}getItem(t){return this.http.get(`${this.apiUrl}/${t}`)}getByIdentity(t){return this.http.get(`${this.apiUrl}/byIdentity/${t}`)}createItem(t){return this.http.post(this.apiUrl,t)}updateItem(t,o){return this.http.put(`${this.apiUrl}/${t}`,o)}deleteItem(t){return this.http.delete(`${this.apiUrl}/${t}`)}};e.\u0275fac=function(o){return new(o||e)(I(v))},e.\u0275prov=y({token:e,factory:e.\u0275fac,providedIn:"root"});let r=e;return r})();var tt=(()=>{let e=class e{constructor(t){this.http=t,this.apiUrl=S.apiBase+"users"}getItems(){return this.http.get(this.apiUrl)}getItemsByInstance(){return this.http.get(this.apiUrl+"/ByInstance")}getItem(t){return this.http.get(`${this.apiUrl}/${t}`)}createItem(t){return this.http.post(this.apiUrl,t)}updateItem(t,o){return this.http.put(`${this.apiUrl}/${t}`,o)}deleteItem(t){return this.http.delete(`${this.apiUrl}/${t}`)}};e.\u0275fac=function(o){return new(o||e)(I(v))},e.\u0275prov=y({token:e,factory:e.\u0275fac,providedIn:"root"});let r=e;return r})();var rt=(()=>{let e=class e{constructor(t){this.http=t,this.apiUrl=S.apiBase+"instances"}getItems(){return this.http.get(this.apiUrl)}getItem(t){return this.http.get(`${this.apiUrl}/${t}`)}createItem(t){return this.http.post(this.apiUrl,t)}updateItem(t,o){return this.http.put(`${this.apiUrl}/${t}`,o)}deleteItem(t){return this.http.delete(`${this.apiUrl}/${t}`)}};e.\u0275fac=function(o){return new(o||e)(I(v))},e.\u0275prov=y({token:e,factory:e.\u0275fac,providedIn:"root"});let r=e;return r})();var ct=(()=>{let e=class e{constructor(t){this.http=t,this.apiUrl=S.apiBase+"licenses"}getItems(){return this.http.get(this.apiUrl)}getItem(t){return this.http.get(`${this.apiUrl}/${t}`)}createItem(t){return this.http.post(this.apiUrl,t)}updateItem(t,o){return this.http.put(`${this.apiUrl}/${t}`,o)}deleteItem(t){return this.http.delete(`${this.apiUrl}/${t}`)}};e.\u0275fac=function(o){return new(o||e)(I(v))},e.\u0275prov=y({token:e,factory:e.\u0275fac,providedIn:"root"});let r=e;return r})();var k=class extends Error{constructor(e,n){let t=new.target.prototype;super(`${e}: Status code '${n}'`),this.statusCode=n,this.__proto__=t}},U=class extends Error{constructor(e="A timeout occurred."){let n=new.target.prototype;super(e),this.__proto__=n}},C=class extends Error{constructor(e="An abort occurred."){let n=new.target.prototype;super(e),this.__proto__=n}},K=class extends Error{constructor(e,n){let t=new.target.prototype;super(e),this.transport=n,this.errorType="UnsupportedTransportError",this.__proto__=t}},V=class extends Error{constructor(e,n){let t=new.target.prototype;super(e),this.transport=n,this.errorType="DisabledTransportError",this.__proto__=t}},X=class extends Error{constructor(e,n){let t=new.target.prototype;super(e),this.transport=n,this.errorType="FailedToStartTransportError",this.__proto__=t}},F=class extends Error{constructor(e){let n=new.target.prototype;super(e),this.errorType="FailedToNegotiateWithServerError",this.__proto__=n}},G=class extends Error{constructor(e,n){let t=new.target.prototype;super(e),this.innerErrors=n,this.__proto__=t}};var W=class{constructor(e,n,t){this.statusCode=e,this.statusText=n,this.content=t}},x=class{get(e,n){return this.send(B(_({},n),{method:"GET",url:e}))}post(e,n){return this.send(B(_({},n),{method:"POST",url:e}))}delete(e,n){return this.send(B(_({},n),{method:"DELETE",url:e}))}getCookieString(e){return""}};var i=function(r){return r[r.Trace=0]="Trace",r[r.Debug=1]="Debug",r[r.Information=2]="Information",r[r.Warning=3]="Warning",r[r.Error=4]="Error",r[r.Critical=5]="Critical",r[r.None=6]="None",r}(i||{});var $=class{constructor(){}log(e,n){}};$.instance=new $;var Se="8.0.7",f=class{static isRequired(e,n){if(e==null)throw new Error(`The '${n}' argument is required.`)}static isNotEmpty(e,n){if(!e||e.match(/^\s*$/))throw new Error(`The '${n}' argument should not be empty.`)}static isIn(e,n,t){if(!(e in n))throw new Error(`Unknown ${t} value: ${e}.`)}},d=class r{static get isBrowser(){return!r.isNode&&typeof window=="object"&&typeof window.document=="object"}static get isWebWorker(){return!r.isNode&&typeof self=="object"&&"importScripts"in self}static get isReactNative(){return!r.isNode&&typeof window=="object"&&typeof window.document>"u"}static get isNode(){return typeof process<"u"&&process.release&&process.release.name==="node"}};function A(r,e){let n="";return T(r)?(n=`Binary data of length ${r.byteLength}`,e&&(n+=`. Content: '${Ce(r)}'`)):typeof r=="string"&&(n=`String data of length ${r.length}`,e&&(n+=`. Content: '${r}'`)),n}function Ce(r){let e=new Uint8Array(r),n="";return e.forEach(t=>{let o=t<16?"0":"";n+=`0x${o}${t.toString(16)} `}),n.substr(0,n.length-1)}function T(r){return r&&typeof ArrayBuffer<"u"&&(r instanceof ArrayBuffer||r.constructor&&r.constructor.name==="ArrayBuffer")}function Q(r,e,n,t,o,s){return p(this,null,function*(){let c={},[a,l]=P();c[a]=l,r.log(i.Trace,`(${e} transport) sending data. ${A(o,s.logMessageContent)}.`);let u=T(o)?"arraybuffer":"text",g=yield n.post(t,{content:o,headers:_(_({},c),s.headers),responseType:u,timeout:s.timeout,withCredentials:s.withCredentials});r.log(i.Trace,`(${e} transport) request complete. Response status: ${g.statusCode}.`)})}function me(r){return r===void 0?new M(i.Information):r===null?$.instance:r.log!==void 0?r:new M(r)}var Y=class{constructor(e,n){this._subject=e,this._observer=n}dispose(){let e=this._subject.observers.indexOf(this._observer);e>-1&&this._subject.observers.splice(e,1),this._subject.observers.length===0&&this._subject.cancelCallback&&this._subject.cancelCallback().catch(n=>{})}},M=class{constructor(e){this._minLevel=e,this.out=console}log(e,n){if(e>=this._minLevel){let t=`[${new Date().toISOString()}] ${i[e]}: ${n}`;switch(e){case i.Critical:case i.Error:this.out.error(t);break;case i.Warning:this.out.warn(t);break;case i.Information:this.out.info(t);break;default:this.out.log(t);break}}}};function P(){let r="X-SignalR-User-Agent";return d.isNode&&(r="User-Agent"),[r,Ie(Se,ve(),Ee(),ke())]}function Ie(r,e,n,t){let o="Microsoft SignalR/",s=r.split(".");return o+=`${s[0]}.${s[1]}`,o+=` (${r}; `,e&&e!==""?o+=`${e}; `:o+="Unknown OS; ",o+=`${n}`,t?o+=`; ${t}`:o+="; Unknown Runtime Version",o+=")",o}function ve(){if(d.isNode)switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}else return""}function ke(){if(d.isNode)return process.versions.node}function Ee(){return d.isNode?"NodeJS":"Browser"}function Z(r){return r.stack?r.stack:r.message?r.message:`${r}`}function we(){if(typeof globalThis<"u")return globalThis;if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("could not find global")}var ee=class extends x{constructor(e){if(super(),this._logger=e,typeof fetch>"u"||d.isNode){let n=typeof __webpack_require__=="function"?__non_webpack_require__:L;this._jar=new(n("tough-cookie")).CookieJar,typeof fetch>"u"?this._fetchType=n("node-fetch"):this._fetchType=fetch,this._fetchType=n("fetch-cookie")(this._fetchType,this._jar)}else this._fetchType=fetch.bind(we());if(typeof AbortController>"u"){let n=typeof __webpack_require__=="function"?__non_webpack_require__:L;this._abortControllerType=n("abort-controller")}else this._abortControllerType=AbortController}send(e){return p(this,null,function*(){if(e.abortSignal&&e.abortSignal.aborted)throw new C;if(!e.method)throw new Error("No method defined.");if(!e.url)throw new Error("No url defined.");let n=new this._abortControllerType,t;e.abortSignal&&(e.abortSignal.onabort=()=>{n.abort(),t=new C});let o=null;if(e.timeout){let l=e.timeout;o=setTimeout(()=>{n.abort(),this._logger.log(i.Warning,"Timeout from HTTP request."),t=new U},l)}e.content===""&&(e.content=void 0),e.content&&(e.headers=e.headers||{},T(e.content)?e.headers["Content-Type"]="application/octet-stream":e.headers["Content-Type"]="text/plain;charset=UTF-8");let s;try{s=yield this._fetchType(e.url,{body:e.content,cache:"no-cache",credentials:e.withCredentials===!0?"include":"same-origin",headers:_({"X-Requested-With":"XMLHttpRequest"},e.headers),method:e.method,mode:"cors",redirect:"follow",signal:n.signal})}catch(l){throw t||(this._logger.log(i.Warning,`Error from HTTP request. ${l}.`),l)}finally{o&&clearTimeout(o),e.abortSignal&&(e.abortSignal.onabort=null)}if(!s.ok){let l=yield be(s,"text");throw new k(l||s.statusText,s.status)}let a=yield be(s,e.responseType);return new W(s.status,s.statusText,a)})}getCookieString(e){let n="";return d.isNode&&this._jar&&this._jar.getCookies(e,(t,o)=>n=o.join("; ")),n}};function be(r,e){let n;switch(e){case"arraybuffer":n=r.arrayBuffer();break;case"text":n=r.text();break;case"blob":case"document":case"json":throw new Error(`${e} is not supported.`);default:n=r.text();break}return n}var te=class extends x{constructor(e){super(),this._logger=e}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new C):e.method?e.url?new Promise((n,t)=>{let o=new XMLHttpRequest;o.open(e.method,e.url,!0),o.withCredentials=e.withCredentials===void 0?!0:e.withCredentials,o.setRequestHeader("X-Requested-With","XMLHttpRequest"),e.content===""&&(e.content=void 0),e.content&&(T(e.content)?o.setRequestHeader("Content-Type","application/octet-stream"):o.setRequestHeader("Content-Type","text/plain;charset=UTF-8"));let s=e.headers;s&&Object.keys(s).forEach(c=>{o.setRequestHeader(c,s[c])}),e.responseType&&(o.responseType=e.responseType),e.abortSignal&&(e.abortSignal.onabort=()=>{o.abort(),t(new C)}),e.timeout&&(o.timeout=e.timeout),o.onload=()=>{e.abortSignal&&(e.abortSignal.onabort=null),o.status>=200&&o.status<300?n(new W(o.status,o.statusText,o.response||o.responseText)):t(new k(o.response||o.responseText||o.statusText,o.status))},o.onerror=()=>{this._logger.log(i.Warning,`Error from HTTP request. ${o.status}: ${o.statusText}.`),t(new k(o.statusText,o.status))},o.ontimeout=()=>{this._logger.log(i.Warning,"Timeout from HTTP request."),t(new U)},o.send(e.content)}):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}};var ne=class extends x{constructor(e){if(super(),typeof fetch<"u"||d.isNode)this._httpClient=new ee(e);else if(typeof XMLHttpRequest<"u")this._httpClient=new te(e);else throw new Error("No usable HttpClient found.")}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new C):e.method?e.url?this._httpClient.send(e):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(e){return this._httpClient.getCookieString(e)}};var E=class r{static write(e){return`${e}${r.RecordSeparator}`}static parse(e){if(e[e.length-1]!==r.RecordSeparator)throw new Error("Message is incomplete.");let n=e.split(r.RecordSeparator);return n.pop(),n}};E.RecordSeparatorCode=30;E.RecordSeparator=String.fromCharCode(E.RecordSeparatorCode);var oe=class{writeHandshakeRequest(e){return E.write(JSON.stringify(e))}parseHandshakeResponse(e){let n,t;if(T(e)){let a=new Uint8Array(e),l=a.indexOf(E.RecordSeparatorCode);if(l===-1)throw new Error("Message is incomplete.");let u=l+1;n=String.fromCharCode.apply(null,Array.prototype.slice.call(a.slice(0,u))),t=a.byteLength>u?a.slice(u).buffer:null}else{let a=e,l=a.indexOf(E.RecordSeparator);if(l===-1)throw new Error("Message is incomplete.");let u=l+1;n=a.substring(0,u),t=a.length>u?a.substring(u):null}let o=E.parse(n),s=JSON.parse(o[0]);if(s.type)throw new Error("Expected a handshake response from the server.");return[t,s]}};var h=function(r){return r[r.Invocation=1]="Invocation",r[r.StreamItem=2]="StreamItem",r[r.Completion=3]="Completion",r[r.StreamInvocation=4]="StreamInvocation",r[r.CancelInvocation=5]="CancelInvocation",r[r.Ping=6]="Ping",r[r.Close=7]="Close",r[r.Ack=8]="Ack",r[r.Sequence=9]="Sequence",r}(h||{});var re=class{constructor(){this.observers=[]}next(e){for(let n of this.observers)n.next(e)}error(e){for(let n of this.observers)n.error&&n.error(e)}complete(){for(let e of this.observers)e.complete&&e.complete()}subscribe(e){return this.observers.push(e),new Y(this,e)}};var se=class{constructor(e,n,t){this._bufferSize=1e5,this._messages=[],this._totalMessageCount=0,this._waitForSequenceMessage=!1,this._nextReceivingSequenceId=1,this._latestReceivedSequenceId=0,this._bufferedByteCount=0,this._reconnectInProgress=!1,this._protocol=e,this._connection=n,this._bufferSize=t}_send(e){return p(this,null,function*(){let n=this._protocol.writeMessage(e),t=Promise.resolve();if(this._isInvocationMessage(e)){this._totalMessageCount++;let o=()=>{},s=()=>{};T(n)?this._bufferedByteCount+=n.byteLength:this._bufferedByteCount+=n.length,this._bufferedByteCount>=this._bufferSize&&(t=new Promise((c,a)=>{o=c,s=a})),this._messages.push(new ge(n,this._totalMessageCount,o,s))}try{this._reconnectInProgress||(yield this._connection.send(n))}catch{this._disconnected()}yield t})}_ack(e){let n=-1;for(let t=0;t<this._messages.length;t++){let o=this._messages[t];if(o._id<=e.sequenceId)n=t,T(o._message)?this._bufferedByteCount-=o._message.byteLength:this._bufferedByteCount-=o._message.length,o._resolver();else if(this._bufferedByteCount<this._bufferSize)o._resolver();else break}n!==-1&&(this._messages=this._messages.slice(n+1))}_shouldProcessMessage(e){if(this._waitForSequenceMessage)return e.type!==h.Sequence?!1:(this._waitForSequenceMessage=!1,!0);if(!this._isInvocationMessage(e))return!0;let n=this._nextReceivingSequenceId;return this._nextReceivingSequenceId++,n<=this._latestReceivedSequenceId?(n===this._latestReceivedSequenceId&&this._ackTimer(),!1):(this._latestReceivedSequenceId=n,this._ackTimer(),!0)}_resetSequence(e){if(e.sequenceId>this._nextReceivingSequenceId){this._connection.stop(new Error("Sequence ID greater than amount of messages we've received."));return}this._nextReceivingSequenceId=e.sequenceId}_disconnected(){this._reconnectInProgress=!0,this._waitForSequenceMessage=!0}_resend(){return p(this,null,function*(){let e=this._messages.length!==0?this._messages[0]._id:this._totalMessageCount+1;yield this._connection.send(this._protocol.writeMessage({type:h.Sequence,sequenceId:e}));let n=this._messages;for(let t of n)yield this._connection.send(t._message);this._reconnectInProgress=!1})}_dispose(e){e??(e=new Error("Unable to reconnect to server."));for(let n of this._messages)n._rejector(e)}_isInvocationMessage(e){switch(e.type){case h.Invocation:case h.StreamItem:case h.Completion:case h.StreamInvocation:case h.CancelInvocation:return!0;case h.Close:case h.Sequence:case h.Ping:case h.Ack:return!1}}_ackTimer(){this._ackTimerHandle===void 0&&(this._ackTimerHandle=setTimeout(()=>p(this,null,function*(){try{this._reconnectInProgress||(yield this._connection.send(this._protocol.writeMessage({type:h.Ack,sequenceId:this._latestReceivedSequenceId})))}catch{}clearTimeout(this._ackTimerHandle),this._ackTimerHandle=void 0}),1e3))}},ge=class{constructor(e,n,t,o){this._message=e,this._id=n,this._resolver=t,this._rejector=o}};var Te=30*1e3,xe=15*1e3,$e=1e5,m=function(r){return r.Disconnected="Disconnected",r.Connecting="Connecting",r.Connected="Connected",r.Disconnecting="Disconnecting",r.Reconnecting="Reconnecting",r}(m||{}),ie=class r{static create(e,n,t,o,s,c,a){return new r(e,n,t,o,s,c,a)}constructor(e,n,t,o,s,c,a){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(i.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},f.isRequired(e,"connection"),f.isRequired(n,"logger"),f.isRequired(t,"protocol"),this.serverTimeoutInMilliseconds=s??Te,this.keepAliveIntervalInMilliseconds=c??xe,this._statefulReconnectBufferSize=a??$e,this._logger=n,this._protocol=t,this.connection=e,this._reconnectPolicy=o,this._handshakeProtocol=new oe,this.connection.onreceive=l=>this._processIncomingData(l),this.connection.onclose=l=>this._connectionClosed(l),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=m.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:h.Ping})}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(e){if(this._connectionState!==m.Disconnected&&this._connectionState!==m.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!e)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=e}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}_startWithStateTransitions(){return p(this,null,function*(){if(this._connectionState!==m.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));this._connectionState=m.Connecting,this._logger.log(i.Debug,"Starting HubConnection.");try{yield this._startInternal(),d.isBrowser&&window.document.addEventListener("freeze",this._freezeEventListener),this._connectionState=m.Connected,this._connectionStarted=!0,this._logger.log(i.Debug,"HubConnection connected successfully.")}catch(e){return this._connectionState=m.Disconnected,this._logger.log(i.Debug,`HubConnection failed to start successfully because of error '${e}'.`),Promise.reject(e)}})}_startInternal(){return p(this,null,function*(){this._stopDuringStartError=void 0,this._receivedHandshakeResponse=!1;let e=new Promise((n,t)=>{this._handshakeResolver=n,this._handshakeRejecter=t});yield this.connection.start(this._protocol.transferFormat);try{let n=this._protocol.version;this.connection.features.reconnect||(n=1);let t={protocol:this._protocol.name,version:n};if(this._logger.log(i.Debug,"Sending handshake request."),yield this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(t)),this._logger.log(i.Information,`Using HubProtocol '${this._protocol.name}'.`),this._cleanupTimeout(),this._resetTimeoutPeriod(),this._resetKeepAliveInterval(),yield e,this._stopDuringStartError)throw this._stopDuringStartError;(this.connection.features.reconnect||!1)&&(this._messageBuffer=new se(this._protocol,this.connection,this._statefulReconnectBufferSize),this.connection.features.disconnected=this._messageBuffer._disconnected.bind(this._messageBuffer),this.connection.features.resend=()=>{if(this._messageBuffer)return this._messageBuffer._resend()}),this.connection.features.inherentKeepAlive||(yield this._sendMessage(this._cachedPingMessage))}catch(n){throw this._logger.log(i.Debug,`Hub handshake failed with error '${n}' during start(). Stopping HubConnection.`),this._cleanupTimeout(),this._cleanupPingTimer(),yield this.connection.stop(n),n}})}stop(){return p(this,null,function*(){let e=this._startPromise;this.connection.features.reconnect=!1,this._stopPromise=this._stopInternal(),yield this._stopPromise;try{yield e}catch{}})}_stopInternal(e){if(this._connectionState===m.Disconnected)return this._logger.log(i.Debug,`Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),Promise.resolve();if(this._connectionState===m.Disconnecting)return this._logger.log(i.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise;let n=this._connectionState;return this._connectionState=m.Disconnecting,this._logger.log(i.Debug,"Stopping HubConnection."),this._reconnectDelayHandle?(this._logger.log(i.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(n===m.Connected&&this._sendCloseMessage(),this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=e||new C("The connection was stopped before the hub handshake could complete."),this.connection.stop(e))}_sendCloseMessage(){return p(this,null,function*(){try{yield this._sendWithProtocol(this._createCloseMessage())}catch{}})}stream(e,...n){let[t,o]=this._replaceStreamingParams(n),s=this._createStreamInvocation(e,n,o),c,a=new re;return a.cancelCallback=()=>{let l=this._createCancelInvocation(s.invocationId);return delete this._callbacks[s.invocationId],c.then(()=>this._sendWithProtocol(l))},this._callbacks[s.invocationId]=(l,u)=>{if(u){a.error(u);return}else l&&(l.type===h.Completion?l.error?a.error(new Error(l.error)):a.complete():a.next(l.item))},c=this._sendWithProtocol(s).catch(l=>{a.error(l),delete this._callbacks[s.invocationId]}),this._launchStreams(t,c),a}_sendMessage(e){return this._resetKeepAliveInterval(),this.connection.send(e)}_sendWithProtocol(e){return this._messageBuffer?this._messageBuffer._send(e):this._sendMessage(this._protocol.writeMessage(e))}send(e,...n){let[t,o]=this._replaceStreamingParams(n),s=this._sendWithProtocol(this._createInvocation(e,n,!0,o));return this._launchStreams(t,s),s}invoke(e,...n){let[t,o]=this._replaceStreamingParams(n),s=this._createInvocation(e,n,!1,o);return new Promise((a,l)=>{this._callbacks[s.invocationId]=(g,R)=>{if(R){l(R);return}else g&&(g.type===h.Completion?g.error?l(new Error(g.error)):a(g.result):l(new Error(`Unexpected message type: ${g.type}`)))};let u=this._sendWithProtocol(s).catch(g=>{l(g),delete this._callbacks[s.invocationId]});this._launchStreams(t,u)})}on(e,n){!e||!n||(e=e.toLowerCase(),this._methods[e]||(this._methods[e]=[]),this._methods[e].indexOf(n)===-1&&this._methods[e].push(n))}off(e,n){if(!e)return;e=e.toLowerCase();let t=this._methods[e];if(t)if(n){let o=t.indexOf(n);o!==-1&&(t.splice(o,1),t.length===0&&delete this._methods[e])}else delete this._methods[e]}onclose(e){e&&this._closedCallbacks.push(e)}onreconnecting(e){e&&this._reconnectingCallbacks.push(e)}onreconnected(e){e&&this._reconnectedCallbacks.push(e)}_processIncomingData(e){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(e=this._processHandshakeResponse(e),this._receivedHandshakeResponse=!0),e){let n=this._protocol.parseMessages(e,this._logger);for(let t of n)if(!(this._messageBuffer&&!this._messageBuffer._shouldProcessMessage(t)))switch(t.type){case h.Invocation:this._invokeClientMethod(t).catch(o=>{this._logger.log(i.Error,`Invoke client method threw error: ${Z(o)}`)});break;case h.StreamItem:case h.Completion:{let o=this._callbacks[t.invocationId];if(o){t.type===h.Completion&&delete this._callbacks[t.invocationId];try{o(t)}catch(s){this._logger.log(i.Error,`Stream callback threw error: ${Z(s)}`)}}break}case h.Ping:break;case h.Close:{this._logger.log(i.Information,"Close message received from server.");let o=t.error?new Error("Server returned an error on close: "+t.error):void 0;t.allowReconnect===!0?this.connection.stop(o):this._stopPromise=this._stopInternal(o);break}case h.Ack:this._messageBuffer&&this._messageBuffer._ack(t);break;case h.Sequence:this._messageBuffer&&this._messageBuffer._resetSequence(t);break;default:this._logger.log(i.Warning,`Invalid message type: ${t.type}.`);break}}this._resetTimeoutPeriod()}_processHandshakeResponse(e){let n,t;try{[t,n]=this._handshakeProtocol.parseHandshakeResponse(e)}catch(o){let s="Error parsing handshake response: "+o;this._logger.log(i.Error,s);let c=new Error(s);throw this._handshakeRejecter(c),c}if(n.error){let o="Server returned handshake error: "+n.error;this._logger.log(i.Error,o);let s=new Error(o);throw this._handshakeRejecter(s),s}else this._logger.log(i.Debug,"Server handshake complete.");return this._handshakeResolver(),t}_resetKeepAliveInterval(){this.connection.features.inherentKeepAlive||(this._nextKeepAlive=new Date().getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){if((!this.connection.features||!this.connection.features.inherentKeepAlive)&&(this._timeoutHandle=setTimeout(()=>this.serverTimeout(),this.serverTimeoutInMilliseconds),this._pingServerHandle===void 0)){let e=this._nextKeepAlive-new Date().getTime();e<0&&(e=0),this._pingServerHandle=setTimeout(()=>p(this,null,function*(){if(this._connectionState===m.Connected)try{yield this._sendMessage(this._cachedPingMessage)}catch{this._cleanupPingTimer()}}),e)}}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}_invokeClientMethod(e){return p(this,null,function*(){let n=e.target.toLowerCase(),t=this._methods[n];if(!t){this._logger.log(i.Warning,`No client method with the name '${n}' found.`),e.invocationId&&(this._logger.log(i.Warning,`No result given for '${n}' method and invocation ID '${e.invocationId}'.`),yield this._sendWithProtocol(this._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null)));return}let o=t.slice(),s=!!e.invocationId,c,a,l;for(let u of o)try{let g=c;c=yield u.apply(this,e.arguments),s&&c&&g&&(this._logger.log(i.Error,`Multiple results provided for '${n}'. Sending error to server.`),l=this._createCompletionMessage(e.invocationId,"Client provided multiple results.",null)),a=void 0}catch(g){a=g,this._logger.log(i.Error,`A callback for the method '${n}' threw error '${g}'.`)}l?yield this._sendWithProtocol(l):s?(a?l=this._createCompletionMessage(e.invocationId,`${a}`,null):c!==void 0?l=this._createCompletionMessage(e.invocationId,null,c):(this._logger.log(i.Warning,`No result given for '${n}' method and invocation ID '${e.invocationId}'.`),l=this._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null)),yield this._sendWithProtocol(l)):c&&this._logger.log(i.Error,`Result given for '${n}' method but server is not expecting a result.`)})}_connectionClosed(e){this._logger.log(i.Debug,`HubConnection.connectionClosed(${e}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||e||new C("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(e||new Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===m.Disconnecting?this._completeClose(e):this._connectionState===m.Connected&&this._reconnectPolicy?this._reconnect(e):this._connectionState===m.Connected&&this._completeClose(e)}_completeClose(e){if(this._connectionStarted){this._connectionState=m.Disconnected,this._connectionStarted=!1,this._messageBuffer&&(this._messageBuffer._dispose(e??new Error("Connection closed.")),this._messageBuffer=void 0),d.isBrowser&&window.document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach(n=>n.apply(this,[e]))}catch(n){this._logger.log(i.Error,`An onclose callback called with error '${e}' threw error '${n}'.`)}}}_reconnect(e){return p(this,null,function*(){let n=Date.now(),t=0,o=e!==void 0?e:new Error("Attempting to reconnect due to a unknown error."),s=this._getNextRetryDelay(t++,0,o);if(s===null){this._logger.log(i.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),this._completeClose(e);return}if(this._connectionState=m.Reconnecting,e?this._logger.log(i.Information,`Connection reconnecting because of error '${e}'.`):this._logger.log(i.Information,"Connection reconnecting."),this._reconnectingCallbacks.length!==0){try{this._reconnectingCallbacks.forEach(c=>c.apply(this,[e]))}catch(c){this._logger.log(i.Error,`An onreconnecting callback called with error '${e}' threw error '${c}'.`)}if(this._connectionState!==m.Reconnecting){this._logger.log(i.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.");return}}for(;s!==null;){if(this._logger.log(i.Information,`Reconnect attempt number ${t} will start in ${s} ms.`),yield new Promise(c=>{this._reconnectDelayHandle=setTimeout(c,s)}),this._reconnectDelayHandle=void 0,this._connectionState!==m.Reconnecting){this._logger.log(i.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");return}try{if(yield this._startInternal(),this._connectionState=m.Connected,this._logger.log(i.Information,"HubConnection reconnected successfully."),this._reconnectedCallbacks.length!==0)try{this._reconnectedCallbacks.forEach(c=>c.apply(this,[this.connection.connectionId]))}catch(c){this._logger.log(i.Error,`An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${c}'.`)}return}catch(c){if(this._logger.log(i.Information,`Reconnect attempt failed because of error '${c}'.`),this._connectionState!==m.Reconnecting){this._logger.log(i.Debug,`Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),this._connectionState===m.Disconnecting&&this._completeClose();return}o=c instanceof Error?c:new Error(c.toString()),s=this._getNextRetryDelay(t++,Date.now()-n,o)}}this._logger.log(i.Information,`Reconnect retries have been exhausted after ${Date.now()-n} ms and ${t} failed attempts. Connection disconnecting.`),this._completeClose()})}_getNextRetryDelay(e,n,t){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:n,previousRetryCount:e,retryReason:t})}catch(o){return this._logger.log(i.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${n}) threw error '${o}'.`),null}}_cancelCallbacksWithError(e){let n=this._callbacks;this._callbacks={},Object.keys(n).forEach(t=>{let o=n[t];try{o(null,e)}catch(s){this._logger.log(i.Error,`Stream 'error' callback called with '${e}' threw error: ${Z(s)}`)}})}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(e,n,t,o){if(t)return o.length!==0?{arguments:n,streamIds:o,target:e,type:h.Invocation}:{arguments:n,target:e,type:h.Invocation};{let s=this._invocationId;return this._invocationId++,o.length!==0?{arguments:n,invocationId:s.toString(),streamIds:o,target:e,type:h.Invocation}:{arguments:n,invocationId:s.toString(),target:e,type:h.Invocation}}}_launchStreams(e,n){if(e.length!==0){n||(n=Promise.resolve());for(let t in e)e[t].subscribe({complete:()=>{n=n.then(()=>this._sendWithProtocol(this._createCompletionMessage(t)))},error:o=>{let s;o instanceof Error?s=o.message:o&&o.toString?s=o.toString():s="Unknown error",n=n.then(()=>this._sendWithProtocol(this._createCompletionMessage(t,s)))},next:o=>{n=n.then(()=>this._sendWithProtocol(this._createStreamItemMessage(t,o)))}})}}_replaceStreamingParams(e){let n=[],t=[];for(let o=0;o<e.length;o++){let s=e[o];if(this._isObservable(s)){let c=this._invocationId;this._invocationId++,n[c]=s,t.push(c.toString()),e.splice(o,1)}}return[n,t]}_isObservable(e){return e&&e.subscribe&&typeof e.subscribe=="function"}_createStreamInvocation(e,n,t){let o=this._invocationId;return this._invocationId++,t.length!==0?{arguments:n,invocationId:o.toString(),streamIds:t,target:e,type:h.StreamInvocation}:{arguments:n,invocationId:o.toString(),target:e,type:h.StreamInvocation}}_createCancelInvocation(e){return{invocationId:e,type:h.CancelInvocation}}_createStreamItemMessage(e,n){return{invocationId:e,item:n,type:h.StreamItem}}_createCompletionMessage(e,n,t){return n?{error:n,invocationId:e,type:h.Completion}:{invocationId:e,result:t,type:h.Completion}}_createCloseMessage(){return{type:h.Close}}};var Pe=[0,2e3,1e4,3e4,null],q=class{constructor(e){this._retryDelays=e!==void 0?[...e,null]:Pe}nextRetryDelayInMilliseconds(e){return this._retryDelays[e.previousRetryCount]}};var j=(()=>{class r{}return r.Authorization="Authorization",r.Cookie="Cookie",r})();var ce=class extends x{constructor(e,n){super(),this._innerClient=e,this._accessTokenFactory=n}send(e){return p(this,null,function*(){let n=!0;this._accessTokenFactory&&(!this._accessToken||e.url&&e.url.indexOf("/negotiate?")>0)&&(n=!1,this._accessToken=yield this._accessTokenFactory()),this._setAuthorizationHeader(e);let t=yield this._innerClient.send(e);return n&&t.statusCode===401&&this._accessTokenFactory?(this._accessToken=yield this._accessTokenFactory(),this._setAuthorizationHeader(e),yield this._innerClient.send(e)):t})}_setAuthorizationHeader(e){e.headers||(e.headers={}),this._accessToken?e.headers[j.Authorization]=`Bearer ${this._accessToken}`:this._accessTokenFactory&&e.headers[j.Authorization]&&delete e.headers[j.Authorization]}getCookieString(e){return this._innerClient.getCookieString(e)}};var b=function(r){return r[r.None=0]="None",r[r.WebSockets=1]="WebSockets",r[r.ServerSentEvents=2]="ServerSentEvents",r[r.LongPolling=4]="LongPolling",r}(b||{}),w=function(r){return r[r.Text=1]="Text",r[r.Binary=2]="Binary",r}(w||{});var ae=class{constructor(){this._isAborted=!1,this.onabort=null}abort(){this._isAborted||(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}};var z=class{get pollAborted(){return this._pollAbort.aborted}constructor(e,n,t){this._httpClient=e,this._logger=n,this._pollAbort=new ae,this._options=t,this._running=!1,this.onreceive=null,this.onclose=null}connect(e,n){return p(this,null,function*(){if(f.isRequired(e,"url"),f.isRequired(n,"transferFormat"),f.isIn(n,w,"transferFormat"),this._url=e,this._logger.log(i.Trace,"(LongPolling transport) Connecting."),n===w.Binary&&typeof XMLHttpRequest<"u"&&typeof new XMLHttpRequest().responseType!="string")throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");let[t,o]=P(),s=_({[t]:o},this._options.headers),c={abortSignal:this._pollAbort.signal,headers:s,timeout:1e5,withCredentials:this._options.withCredentials};n===w.Binary&&(c.responseType="arraybuffer");let a=`${e}&_=${Date.now()}`;this._logger.log(i.Trace,`(LongPolling transport) polling: ${a}.`);let l=yield this._httpClient.get(a,c);l.statusCode!==200?(this._logger.log(i.Error,`(LongPolling transport) Unexpected response code: ${l.statusCode}.`),this._closeError=new k(l.statusText||"",l.statusCode),this._running=!1):this._running=!0,this._receiving=this._poll(this._url,c)})}_poll(e,n){return p(this,null,function*(){try{for(;this._running;)try{let t=`${e}&_=${Date.now()}`;this._logger.log(i.Trace,`(LongPolling transport) polling: ${t}.`);let o=yield this._httpClient.get(t,n);o.statusCode===204?(this._logger.log(i.Information,"(LongPolling transport) Poll terminated by server."),this._running=!1):o.statusCode!==200?(this._logger.log(i.Error,`(LongPolling transport) Unexpected response code: ${o.statusCode}.`),this._closeError=new k(o.statusText||"",o.statusCode),this._running=!1):o.content?(this._logger.log(i.Trace,`(LongPolling transport) data received. ${A(o.content,this._options.logMessageContent)}.`),this.onreceive&&this.onreceive(o.content)):this._logger.log(i.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(t){this._running?t instanceof U?this._logger.log(i.Trace,"(LongPolling transport) Poll timed out, reissuing."):(this._closeError=t,this._running=!1):this._logger.log(i.Trace,`(LongPolling transport) Poll errored after shutdown: ${t.message}`)}}finally{this._logger.log(i.Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this._raiseOnClose()}})}send(e){return p(this,null,function*(){return this._running?Q(this._logger,"LongPolling",this._httpClient,this._url,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))})}stop(){return p(this,null,function*(){this._logger.log(i.Trace,"(LongPolling transport) Stopping polling."),this._running=!1,this._pollAbort.abort();try{yield this._receiving,this._logger.log(i.Trace,`(LongPolling transport) sending DELETE request to ${this._url}.`);let e={},[n,t]=P();e[n]=t;let o={headers:_(_({},e),this._options.headers),timeout:this._options.timeout,withCredentials:this._options.withCredentials},s;try{yield this._httpClient.delete(this._url,o)}catch(c){s=c}s?s instanceof k&&(s.statusCode===404?this._logger.log(i.Trace,"(LongPolling transport) A 404 response was returned from sending a DELETE request."):this._logger.log(i.Trace,`(LongPolling transport) Error sending a DELETE request: ${s}`)):this._logger.log(i.Trace,"(LongPolling transport) DELETE request accepted.")}finally{this._logger.log(i.Trace,"(LongPolling transport) Stop finished."),this._raiseOnClose()}})}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(i.Trace,e),this.onclose(this._closeError)}}};var le=class{constructor(e,n,t,o){this._httpClient=e,this._accessToken=n,this._logger=t,this._options=o,this.onreceive=null,this.onclose=null}connect(e,n){return p(this,null,function*(){return f.isRequired(e,"url"),f.isRequired(n,"transferFormat"),f.isIn(n,w,"transferFormat"),this._logger.log(i.Trace,"(SSE transport) Connecting."),this._url=e,this._accessToken&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(this._accessToken)}`),new Promise((t,o)=>{let s=!1;if(n!==w.Text){o(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"));return}let c;if(d.isBrowser||d.isWebWorker)c=new this._options.EventSource(e,{withCredentials:this._options.withCredentials});else{let a=this._httpClient.getCookieString(e),l={};l.Cookie=a;let[u,g]=P();l[u]=g,c=new this._options.EventSource(e,{withCredentials:this._options.withCredentials,headers:_(_({},l),this._options.headers)})}try{c.onmessage=a=>{if(this.onreceive)try{this._logger.log(i.Trace,`(SSE transport) data received. ${A(a.data,this._options.logMessageContent)}.`),this.onreceive(a.data)}catch(l){this._close(l);return}},c.onerror=a=>{s?this._close():o(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},c.onopen=()=>{this._logger.log(i.Information,`SSE connected to ${this._url}`),this._eventSource=c,s=!0,t()}}catch(a){o(a);return}})})}send(e){return p(this,null,function*(){return this._eventSource?Q(this._logger,"SSE",this._httpClient,this._url,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))})}stop(){return this._close(),Promise.resolve()}_close(e){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(e))}};var he=class{constructor(e,n,t,o,s,c){this._logger=t,this._accessTokenFactory=n,this._logMessageContent=o,this._webSocketConstructor=s,this._httpClient=e,this.onreceive=null,this.onclose=null,this._headers=c}connect(e,n){return p(this,null,function*(){f.isRequired(e,"url"),f.isRequired(n,"transferFormat"),f.isIn(n,w,"transferFormat"),this._logger.log(i.Trace,"(WebSockets transport) Connecting.");let t;return this._accessTokenFactory&&(t=yield this._accessTokenFactory()),new Promise((o,s)=>{e=e.replace(/^http/,"ws");let c,a=this._httpClient.getCookieString(e),l=!1;if(d.isNode||d.isReactNative){let u={},[g,R]=P();u[g]=R,t&&(u[j.Authorization]=`Bearer ${t}`),a&&(u[j.Cookie]=a),c=new this._webSocketConstructor(e,void 0,{headers:_(_({},u),this._headers)})}else t&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(t)}`);c||(c=new this._webSocketConstructor(e)),n===w.Binary&&(c.binaryType="arraybuffer"),c.onopen=u=>{this._logger.log(i.Information,`WebSocket connected to ${e}.`),this._webSocket=c,l=!0,o()},c.onerror=u=>{let g=null;typeof ErrorEvent<"u"&&u instanceof ErrorEvent?g=u.error:g="There was an error with the transport",this._logger.log(i.Information,`(WebSockets transport) ${g}.`)},c.onmessage=u=>{if(this._logger.log(i.Trace,`(WebSockets transport) data received. ${A(u.data,this._logMessageContent)}.`),this.onreceive)try{this.onreceive(u.data)}catch(g){this._close(g);return}},c.onclose=u=>{if(l)this._close(u);else{let g=null;typeof ErrorEvent<"u"&&u instanceof ErrorEvent?g=u.error:g="WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",s(new Error(g))}}})})}send(e){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(i.Trace,`(WebSockets transport) sending data. ${A(e,this._logMessageContent)}.`),this._webSocket.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(e){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(i.Trace,"(WebSockets transport) socket closed."),this.onclose&&(this._isCloseEvent(e)&&(e.wasClean===!1||e.code!==1e3)?this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason||"no reason given"}).`)):e instanceof Error?this.onclose(e):this.onclose())}_isCloseEvent(e){return e&&typeof e.wasClean=="boolean"&&typeof e.code=="number"}};var ye=100,ue=class{constructor(e,n={}){if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,f.isRequired(e,"url"),this._logger=me(n.logger),this.baseUrl=this._resolveUrl(e),n=n||{},n.logMessageContent=n.logMessageContent===void 0?!1:n.logMessageContent,typeof n.withCredentials=="boolean"||n.withCredentials===void 0)n.withCredentials=n.withCredentials===void 0?!0:n.withCredentials;else throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");n.timeout=n.timeout===void 0?100*1e3:n.timeout;let t=null,o=null;if(d.isNode&&typeof L<"u"){let s=typeof __webpack_require__=="function"?__non_webpack_require__:L;t=s("ws"),o=s("eventsource")}!d.isNode&&typeof WebSocket<"u"&&!n.WebSocket?n.WebSocket=WebSocket:d.isNode&&!n.WebSocket&&t&&(n.WebSocket=t),!d.isNode&&typeof EventSource<"u"&&!n.EventSource?n.EventSource=EventSource:d.isNode&&!n.EventSource&&typeof o<"u"&&(n.EventSource=o),this._httpClient=new ce(n.httpClient||new ne(this._logger),n.accessTokenFactory),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=n,this.onreceive=null,this.onclose=null}start(e){return p(this,null,function*(){if(e=e||w.Binary,f.isIn(e,w,"transferFormat"),this._logger.log(i.Debug,`Starting connection with transfer format '${w[e]}'.`),this._connectionState!=="Disconnected")return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(this._connectionState="Connecting",this._startInternalPromise=this._startInternal(e),yield this._startInternalPromise,this._connectionState==="Disconnecting"){let n="Failed to start the HttpConnection before stop() was called.";return this._logger.log(i.Error,n),yield this._stopPromise,Promise.reject(new C(n))}else if(this._connectionState!=="Connected"){let n="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return this._logger.log(i.Error,n),Promise.reject(new C(n))}this._connectionStarted=!0})}send(e){return this._connectionState!=="Connected"?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new fe(this.transport)),this._sendQueue.send(e))}stop(e){return p(this,null,function*(){if(this._connectionState==="Disconnected")return this._logger.log(i.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),Promise.resolve();if(this._connectionState==="Disconnecting")return this._logger.log(i.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise;this._connectionState="Disconnecting",this._stopPromise=new Promise(n=>{this._stopPromiseResolver=n}),yield this._stopInternal(e),yield this._stopPromise})}_stopInternal(e){return p(this,null,function*(){this._stopError=e;try{yield this._startInternalPromise}catch{}if(this.transport){try{yield this.transport.stop()}catch(n){this._logger.log(i.Error,`HttpConnection.transport.stop() threw error '${n}'.`),this._stopConnection()}this.transport=void 0}else this._logger.log(i.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")})}_startInternal(e){return p(this,null,function*(){let n=this.baseUrl;this._accessTokenFactory=this._options.accessTokenFactory,this._httpClient._accessTokenFactory=this._accessTokenFactory;try{if(this._options.skipNegotiation)if(this._options.transport===b.WebSockets)this.transport=this._constructTransport(b.WebSockets),yield this._startTransport(n,e);else throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");else{let t=null,o=0;do{if(t=yield this._getNegotiationResponse(n),this._connectionState==="Disconnecting"||this._connectionState==="Disconnected")throw new C("The connection was stopped during negotiation.");if(t.error)throw new Error(t.error);if(t.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(t.url&&(n=t.url),t.accessToken){let s=t.accessToken;this._accessTokenFactory=()=>s,this._httpClient._accessToken=s,this._httpClient._accessTokenFactory=void 0}o++}while(t.url&&o<ye);if(o===ye&&t.url)throw new Error("Negotiate redirection limit exceeded.");yield this._createTransport(n,this._options.transport,t,e)}this.transport instanceof z&&(this.features.inherentKeepAlive=!0),this._connectionState==="Connecting"&&(this._logger.log(i.Debug,"The HttpConnection connected successfully."),this._connectionState="Connected")}catch(t){return this._logger.log(i.Error,"Failed to start the connection: "+t),this._connectionState="Disconnected",this.transport=void 0,this._stopPromiseResolver(),Promise.reject(t)}})}_getNegotiationResponse(e){return p(this,null,function*(){let n={},[t,o]=P();n[t]=o;let s=this._resolveNegotiateUrl(e);this._logger.log(i.Debug,`Sending negotiation request: ${s}.`);try{let c=yield this._httpClient.post(s,{content:"",headers:_(_({},n),this._options.headers),timeout:this._options.timeout,withCredentials:this._options.withCredentials});if(c.statusCode!==200)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${c.statusCode}'`));let a=JSON.parse(c.content);return(!a.negotiateVersion||a.negotiateVersion<1)&&(a.connectionToken=a.connectionId),a.useStatefulReconnect&&this._options._useStatefulReconnect!==!0?Promise.reject(new F("Client didn't negotiate Stateful Reconnect but the server did.")):a}catch(c){let a="Failed to complete negotiation with the server: "+c;return c instanceof k&&c.statusCode===404&&(a=a+" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),this._logger.log(i.Error,a),Promise.reject(new F(a))}})}_createConnectUrl(e,n){return n?e+(e.indexOf("?")===-1?"?":"&")+`id=${n}`:e}_createTransport(e,n,t,o){return p(this,null,function*(){let s=this._createConnectUrl(e,t.connectionToken);if(this._isITransport(n)){this._logger.log(i.Debug,"Connection was provided an instance of ITransport, using that directly."),this.transport=n,yield this._startTransport(s,o),this.connectionId=t.connectionId;return}let c=[],a=t.availableTransports||[],l=t;for(let u of a){let g=this._resolveTransportOrError(u,n,o,l?.useStatefulReconnect===!0);if(g instanceof Error)c.push(`${u.transport} failed:`),c.push(g);else if(this._isITransport(g)){if(this.transport=g,!l){try{l=yield this._getNegotiationResponse(e)}catch(R){return Promise.reject(R)}s=this._createConnectUrl(e,l.connectionToken)}try{yield this._startTransport(s,o),this.connectionId=l.connectionId;return}catch(R){if(this._logger.log(i.Error,`Failed to start the transport '${u.transport}': ${R}`),l=void 0,c.push(new X(`${u.transport} failed: ${R}`,b[u.transport])),this._connectionState!=="Connecting"){let de="Failed to select transport before stop() was called.";return this._logger.log(i.Debug,de),Promise.reject(new C(de))}}}}return c.length>0?Promise.reject(new G(`Unable to connect to the server with any of the available transports. ${c.join(" ")}`,c)):Promise.reject(new Error("None of the transports supported by the client are supported by the server."))})}_constructTransport(e){switch(e){case b.WebSockets:if(!this._options.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new he(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case b.ServerSentEvents:if(!this._options.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new le(this._httpClient,this._httpClient._accessToken,this._logger,this._options);case b.LongPolling:return new z(this._httpClient,this._logger,this._options);default:throw new Error(`Unknown transport: ${e}.`)}}_startTransport(e,n){return this.transport.onreceive=this.onreceive,this.features.reconnect?this.transport.onclose=t=>p(this,null,function*(){let o=!1;if(this.features.reconnect)try{this.features.disconnected(),yield this.transport.connect(e,n),yield this.features.resend()}catch{o=!0}else{this._stopConnection(t);return}o&&this._stopConnection(t)}):this.transport.onclose=t=>this._stopConnection(t),this.transport.connect(e,n)}_resolveTransportOrError(e,n,t,o){let s=b[e.transport];if(s==null)return this._logger.log(i.Debug,`Skipping transport '${e.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);if(Re(n,s))if(e.transferFormats.map(a=>w[a]).indexOf(t)>=0){if(s===b.WebSockets&&!this._options.WebSocket||s===b.ServerSentEvents&&!this._options.EventSource)return this._logger.log(i.Debug,`Skipping transport '${b[s]}' because it is not supported in your environment.'`),new K(`'${b[s]}' is not supported in your environment.`,s);this._logger.log(i.Debug,`Selecting transport '${b[s]}'.`);try{return this.features.reconnect=s===b.WebSockets?o:void 0,this._constructTransport(s)}catch(a){return a}}else return this._logger.log(i.Debug,`Skipping transport '${b[s]}' because it does not support the requested transfer format '${w[t]}'.`),new Error(`'${b[s]}' does not support ${w[t]}.`);else return this._logger.log(i.Debug,`Skipping transport '${b[s]}' because it was disabled by the client.`),new V(`'${b[s]}' is disabled by the client.`,s)}_isITransport(e){return e&&typeof e=="object"&&"connect"in e}_stopConnection(e){if(this._logger.log(i.Debug,`HttpConnection.stopConnection(${e}) called while in state ${this._connectionState}.`),this.transport=void 0,e=this._stopError||e,this._stopError=void 0,this._connectionState==="Disconnected"){this._logger.log(i.Debug,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`);return}if(this._connectionState==="Connecting")throw this._logger.log(i.Warning,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);if(this._connectionState==="Disconnecting"&&this._stopPromiseResolver(),e?this._logger.log(i.Error,`Connection disconnected with error '${e}'.`):this._logger.log(i.Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch(n=>{this._logger.log(i.Error,`TransportSendQueue.stop() threw error '${n}'.`)}),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(e)}catch(n){this._logger.log(i.Error,`HttpConnection.onclose(${e}) threw error '${n}'.`)}}}_resolveUrl(e){if(e.lastIndexOf("https://",0)===0||e.lastIndexOf("http://",0)===0)return e;if(!d.isBrowser)throw new Error(`Cannot resolve '${e}'.`);let n=window.document.createElement("a");return n.href=e,this._logger.log(i.Information,`Normalizing '${e}' to '${n.href}'.`),n.href}_resolveNegotiateUrl(e){let n=new URL(e);n.pathname.endsWith("/")?n.pathname+="negotiate":n.pathname+="/negotiate";let t=new URLSearchParams(n.searchParams);return t.has("negotiateVersion")||t.append("negotiateVersion",this._negotiateVersion.toString()),t.has("useStatefulReconnect")?t.get("useStatefulReconnect")==="true"&&(this._options._useStatefulReconnect=!0):this._options._useStatefulReconnect===!0&&t.append("useStatefulReconnect","true"),n.search=t.toString(),n.toString()}};function Re(r,e){return!r||(e&r)!==0}var fe=class r{constructor(e){this._transport=e,this._buffer=[],this._executing=!0,this._sendBufferedData=new O,this._transportResult=new O,this._sendLoopPromise=this._sendLoop()}send(e){return this._bufferData(e),this._transportResult||(this._transportResult=new O),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(e){if(this._buffer.length&&typeof this._buffer[0]!=typeof e)throw new Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof e}`);this._buffer.push(e),this._sendBufferedData.resolve()}_sendLoop(){return p(this,null,function*(){for(;;){if(yield this._sendBufferedData.promise,!this._executing){this._transportResult&&this._transportResult.reject("Connection stopped.");break}this._sendBufferedData=new O;let e=this._transportResult;this._transportResult=void 0;let n=typeof this._buffer[0]=="string"?this._buffer.join(""):r._concatBuffers(this._buffer);this._buffer.length=0;try{yield this._transport.send(n),e.resolve()}catch(t){e.reject(t)}}})}static _concatBuffers(e){let n=e.map(s=>s.byteLength).reduce((s,c)=>s+c),t=new Uint8Array(n),o=0;for(let s of e)t.set(new Uint8Array(s),o),o+=s.byteLength;return t.buffer}},O=class{constructor(){this.promise=new Promise((e,n)=>[this._resolver,this._rejecter]=[e,n])}resolve(){this._resolver()}reject(e){this._rejecter(e)}};var De="json",pe=class{constructor(){this.name=De,this.version=2,this.transferFormat=w.Text}parseMessages(e,n){if(typeof e!="string")throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];n===null&&(n=$.instance);let t=E.parse(e),o=[];for(let s of t){let c=JSON.parse(s);if(typeof c.type!="number")throw new Error("Invalid payload.");switch(c.type){case h.Invocation:this._isInvocationMessage(c);break;case h.StreamItem:this._isStreamItemMessage(c);break;case h.Completion:this._isCompletionMessage(c);break;case h.Ping:break;case h.Close:break;case h.Ack:this._isAckMessage(c);break;case h.Sequence:this._isSequenceMessage(c);break;default:n.log(i.Information,"Unknown message type '"+c.type+"' ignored.");continue}o.push(c)}return o}writeMessage(e){return E.write(JSON.stringify(e))}_isInvocationMessage(e){this._assertNotEmptyString(e.target,"Invalid payload for Invocation message."),e.invocationId!==void 0&&this._assertNotEmptyString(e.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(e){if(this._assertNotEmptyString(e.invocationId,"Invalid payload for StreamItem message."),e.item===void 0)throw new Error("Invalid payload for StreamItem message.")}_isCompletionMessage(e){if(e.result&&e.error)throw new Error("Invalid payload for Completion message.");!e.result&&e.error&&this._assertNotEmptyString(e.error,"Invalid payload for Completion message."),this._assertNotEmptyString(e.invocationId,"Invalid payload for Completion message.")}_isAckMessage(e){if(typeof e.sequenceId!="number")throw new Error("Invalid SequenceId for Ack message.")}_isSequenceMessage(e){if(typeof e.sequenceId!="number")throw new Error("Invalid SequenceId for Sequence message.")}_assertNotEmptyString(e,n){if(typeof e!="string"||e==="")throw new Error(n)}};var Ue={trace:i.Trace,debug:i.Debug,info:i.Information,information:i.Information,warn:i.Warning,warning:i.Warning,error:i.Error,critical:i.Critical,none:i.None};function Ae(r){let e=Ue[r.toLowerCase()];if(typeof e<"u")return e;throw new Error(`Unknown log level: ${r}`)}var J=class{configureLogging(e){if(f.isRequired(e,"logging"),He(e))this.logger=e;else if(typeof e=="string"){let n=Ae(e);this.logger=new M(n)}else this.logger=new M(e);return this}withUrl(e,n){return f.isRequired(e,"url"),f.isNotEmpty(e,"url"),this.url=e,typeof n=="object"?this.httpConnectionOptions=_(_({},this.httpConnectionOptions),n):this.httpConnectionOptions=B(_({},this.httpConnectionOptions),{transport:n}),this}withHubProtocol(e){return f.isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return e?Array.isArray(e)?this.reconnectPolicy=new q(e):this.reconnectPolicy=e:this.reconnectPolicy=new q,this}withServerTimeout(e){return f.isRequired(e,"milliseconds"),this._serverTimeoutInMilliseconds=e,this}withKeepAliveInterval(e){return f.isRequired(e,"milliseconds"),this._keepAliveIntervalInMilliseconds=e,this}withStatefulReconnect(e){return this.httpConnectionOptions===void 0&&(this.httpConnectionOptions={}),this.httpConnectionOptions._useStatefulReconnect=!0,this._statefulReconnectBufferSize=e?.bufferSize,this}build(){let e=this.httpConnectionOptions||{};if(e.logger===void 0&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");let n=new ue(this.url,e);return ie.create(n,this.logger||$.instance,this.protocol||new pe,this.reconnectPolicy,this._serverTimeoutInMilliseconds,this._keepAliveIntervalInMilliseconds,this._statefulReconnectBufferSize)}};function He(r){return r.log!==void 0}var oo=(()=>{let e=class e{constructor(){}connect(){let t=JSON.parse(localStorage.getItem("user"));this.hubConnection=new J().withUrl(`${S.hubBase}`,{}).withAutomaticReconnect().build(),this.hubConnection.start().then(()=>console.log("Connected to SignalR hub")).catch(o=>console.error("Error connecting to SignalR hub:",o))}joinGroup(){let t=JSON.parse(localStorage.getItem("user"));this.hubConnection?.invoke("JoinGroup",t.instance.identity,t.user_name)}joinGroupAnonymus(t){this.hubConnection?.invoke("JoinGroup",t,"Anonymus")}leaveGroup(){let t=JSON.parse(localStorage.getItem("user"));this.hubConnection?.invoke("LeaveGroup",t.instance.identity,t.user_name)}newUser(){return new H(t=>{this.hubConnection?.on("NewUser",(o,s)=>{console.log(o,s),t.next(s)})})}leftUser(){return new H(t=>{this.hubConnection?.on("LeftUser",(o,s)=>{console.log(o,s),t.next(s)})})}sendOrder(t){let o=JSON.parse(localStorage.getItem("user"));this.hubConnection?.invoke("SendOrder",o.instance.identity,o.user_name)}receiveOrderToKitchen(){return new H(t=>{this.hubConnection?.on("ReceiveOrderToKitchen",o=>{console.log("ReceiveOrderToKitchen",o),t.next(o)})})}receiveOrderFromTable(){return new H(t=>{this.hubConnection?.on("ReceiveOrderFromTable",o=>{console.log("ReceiveOrderFromTable",o),t.next(o)})})}sendNotificationTables(t){this.hubConnection?.invoke("SendNotificacionTables",t.instance?.identity,t)}notificationWarnTables(){return new H(t=>{this.hubConnection?.on("NotificationWarnTables",o=>{t.next(o)})})}notificationDangerTables(){return new H(t=>{this.hubConnection?.on("NotificationDangerAttendace",o=>{t.next(o)})})}};e.\u0275fac=function(o){return new(o||e)},e.\u0275prov=y({token:e,factory:e.\u0275fac,providedIn:"root"});let r=e;return r})();export{S as a,Le as b,Fe as c,Je as d,Xe as e,Qe as f,tt as g,rt as h,ct as i,oo as j};
